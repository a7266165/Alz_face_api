# ===================================
# Dockerfile.gpu - GPU 版本
# 基於 Ubuntu 22.04 + CUDA 11.8
# ===================================

FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

# 避免互動式提示
ENV DEBIAN_FRONTEND=noninteractive

# 安裝 Python 3.11 和系統依賴
RUN apt-get update && apt-get install -y \
    # 編譯工具（dlib 需要）
    build-essential \
    cmake \
    # Python 3.11
    software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3.11-distutils \
    python3-pip \
    # OpenCV 依賴
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    # dlib 依賴
    libgomp1 \
    # 壓縮檔支援
    p7zip-full \
    unar \
    # 工具
    wget \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# 設定 Python 3.11 為預設
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# 升級 pip
RUN python -m pip install --upgrade pip

WORKDIR /app

# 複製依賴檔案
COPY pyproject.toml poetry.lock* ./

# 安裝 Poetry
RUN pip install --no-cache-dir poetry==2.1.3 && \
    poetry config virtualenvs.create false

# 安裝專案依賴
# Poetry 會自動從 pytorch 源安裝 torch，從 PyPI 安裝其他套件
RUN poetry install --no-root --only main --no-interaction --no-ansi

# 替換 onnxruntime 為 GPU 版本
RUN pip uninstall -y onnxruntime && \
    pip install --no-cache-dir onnxruntime-gpu==1.16.3

# 複製應用程式碼
COPY . .

# 建立必要目錄
RUN mkdir -p model workspace/temp

# 環境變數
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV LOG_LEVEL=INFO
ENV CUDA_VISIBLE_DEVICES=0

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000

# 啟動應用程式
CMD ["python", "app.py"]